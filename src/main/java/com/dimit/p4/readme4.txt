使用反射方式改进访问者模式:
1、当增加一个访问器时。通过实现ReflectionVisitor抽象类 ，然后在其中重载需要对哪些数据源（Person子类）访问的方法.
2、当增加一个数据源（Person子类）时。只需让数据源实现Person接口，然后实现accpt方法并将数据源放入数据结合中。
最后在可以访问的访问器中增加具体访问执行的操作即可。

总结：
其实抽象访问者中的visit方法就是通过反射去查找每一个具体访问者中所实现的对各个具体元素的visit方法，
然后捕捉NoSuchMethodException的异常。这样的好处就是你可以自由选择某种具体访问者对某种
具体元素(被访问者)visit方法的实现，增加了灵活性。而且增加一个新具体元素时，再也不需要重新编译抽象
访问者与所有具体访问者。从而达到部分的“开放-封闭”。当然，你要增加某种具体访问者的visit方法时，
还需要去修改具体访问者的类。但这比修改所有访问者and重新编译要好得多。缺点就是，从实现Visitor接口变成了继承ReflectionVisitor抽象类